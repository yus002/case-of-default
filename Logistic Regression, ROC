
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r}
library(readxl)
df <- read_excel("Fitness Club Data.xlsx")
df = subset(df, (age > 5) & (df$age < 80)) # clean the data
df = subset(df, df$price != df$downpmt)
df$pmttype_1 = (df$pmttype %in% 1) * 1
df$pmttype_2 = (df$pmttype %in% 2) * 1
df$pmttype_3 = (df$pmttype %in% 3) * 1
df$pmttype_4 = (df$pmttype %in% 4) * 1
df$pmttype_5 = (df$pmttype %in% 5) * 1
#View(df)
#head(df)

```
# 1. Calculate basic stats descriptive statistics (mean, median, min, max, standard deviation) for each field 
```{r}
range.date = c(min(df$enrolldt) , max(df$enrolldt))
range.date
c(sd(df$price),sd(df$downpmt), sd(df$monthdue),sd(df$age),sd(df$default))
summary(df)
```
# 2. Visualize distributions of data elements using histograms for key variables and predict which variables you expect to be most correlated with default/churn. 
```{r}
par(mfrow=c(2,2))
plot(density(df$pmttype))
plot(density(df$age))
plot(density(df$price))
plot(density(df$use))
correlation = c(age.factor = cor(df$age , df$default), payment.type.factor = cor(df$pmttype,df$default), 
                gender = cor(df$gender,df$default), price.factor = cor(df$price, df$default),
                downpmt.factor = cor(df$downpmt, df$default), monthdue = cor(df$monthdue,df$default),
                                                                             use = cor(df$use,df$default))
sort(correlation)
# payment type is most correlated with default

```
# 3.Calculate Linear and/or Logistic Regression Models to Predict Churn/Retention, you may choose to identify groups within the data to narrow your focus on. (The "default" variable = churn, you may choose to only use age and payment type to build a model to predict "default" = churn) 
```{r}
#model = lm(df$default~df$age + df$pmttype + df$use + df$downpmt)
#summary(model)
#predict(model)
input_ones = df[which(df$default == 1), ]
input_zeros = df[which(df$default == 0), ]
set.seed(100)
input_ones_training_rows = sample(1:nrow(input_ones), 0.7*nrow(input_ones))
input_zeros_training_rows <- sample(1:nrow(input_zeros), 0.7*nrow(input_ones))  # 0's for training. Pick as many 0's as 1's
training_ones <- input_ones[input_ones_training_rows, ]  
training_zeros <- input_zeros[input_zeros_training_rows, ]
trainingData <- rbind(training_ones, training_zeros)  # row bind the 1's and 0's 
View(trainingData)
# Create Test Data
test_ones <- input_ones[-input_ones_training_rows, ]
test_zeros <- input_zeros[-input_zeros_training_rows, ]
testData <- rbind(test_ones, test_zeros)  
View(testData)
logitMod = glm(default ~ price+ pmttype_1 + pmttype_2 + pmttype_3+pmttype_4+ pmttype_5 + use + downpmt, data = trainingData, family = binomial(link = "logit"))
predicted <- plogis(predict(logitMod, testData))
predicted
summary(logitMod)

```
# 4. Display the output visually using charts of your choosing and explain your choice. (ROC Curve) 
```{r}
#install.packages("InformationValue")
library(InformationValue)
plotROC(testData$default, predicted)

```
